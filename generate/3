import utils


def main():

    # for testing
    a = utils.point(2, -3.5, 1)
    a_ = utils.point(-4, -2.2, -9)
    b = utils.point(-9, 4.3, 0)
    b_ = utils.point(9, 2, -3)
    c = utils.point(-7, 1.2, 0)
    c_ = utils.point(4.9, 1, 3)

    # p = (a & b)
    # p_ =  (c_ & a_)
    p = utils.plane(3, 2, 4, 5).normalized()
    p_ = utils.plane(-3, 9, 5, 5).normalized()
    # p = utils.point(3, 2, 4)
    # p_ = utils.point(-3, 9, 5)
    m = (p_ * p.inverse()).ssqrt()
    res = m * p * ~m
    print(p_)
    print(res)

    # motor_from_point_correspondences(trivec1, trivec2, 0, 0, 0, 0)
    # motor_from_point_correspondences(a, a_, b, b_, c, c_)


def motor_from_point_correspondences(a, a_, b, b_, c, c_):
    print(a_)

    Va = (a_ * a.inverse()).sqrt()

    print((Va * a * ~Va))

    Ba = Va * b * ~Va
    to = (a_ & b_).normalized()
    from_ = (a_ & Ba).normalized()
    Vb = (to * from_.inverse()).sqrt()

    print(Vb * a * ~Vb)

    Cba = Vb * Va * c * ~Va * ~Vb
    Vc = (a_ & b_ & c_ * (a_ & b_ & Cba).inverse()).sqrt()

    print(Vc * a * ~Vc)

    V = Vc * Vb * Va

    print(V * a * ~V)


if __name__ == "__main__":
    main()
